<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xunwei.som.mapper.PermissionMapper">
	<resultMap id="BaseResultMap" type="com.xunwei.som.pojo.permissions.Permission">
		<id column="id" jdbcType="INTEGER" property="id" />
		<id column="permission_id" jdbcType="VARCHAR" property="permissionId" />
		<result column="permission_name" jdbcType="VARCHAR" property="permissionName" />
		<result column="description" jdbcType="VARCHAR" property="description" />
		<result column="parent_id" jdbcType="VARCHAR" property="parentId" />
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, permission_id, permission_name, description, parent_id,
		type, status,
		create_time,
		update_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="com.xunwei.som.pojo.permissions.PermissionKey"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from permission
		where id = #{id,jdbcType=INTEGER}
		and permission_id =
		#{permissionId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="com.xunwei.som.pojo.permissions.PermissionKey">
		delete from
		permission
		where id = #{id,jdbcType=INTEGER}
		and permission_id =
		#{permissionId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.xunwei.som.pojo.permissions.Permission">
		insert into permission (id,
		permission_id, permission_name,
		description, parent_id, type,
		status,
		create_time, update_time
		)
		values (#{id,jdbcType=INTEGER},
		#{permissionId,jdbcType=VARCHAR},
		#{permissionName,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR},
		#{type,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.xunwei.som.pojo.permissions.Permission">
		insert into permission
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="permissionId != null">
				permission_id,
			</if>
			<if test="permissionName != null">
				permission_name,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="permissionId != null">
				#{permissionId,jdbcType=VARCHAR},
			</if>
			<if test="permissionName != null">
				#{permissionName,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xunwei.som.pojo.permissions.Permission">
		update permission
		<set>
			<if test="permissionName != null">
				permission_name = #{permissionName,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
		and permission_id =
		#{permissionId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xunwei.som.pojo.permissions.Permission">
		update permission
		set permission_name = #{permissionName,jdbcType=VARCHAR},
		description =
		#{description,jdbcType=VARCHAR},
		parent_id =
		#{parentId,jdbcType=VARCHAR},
		type = #{type,jdbcType=INTEGER},
		status =
		#{status,jdbcType=INTEGER},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
		and
		permission_id = #{permissionId,jdbcType=VARCHAR}
	</update>

	<select id="selectPermissionByuserId" resultMap="BaseResultMap">
		SELECT r.* FROM
		role_permission r
		LEFT JOIN user_role u
		ON r.role_id=u.role_id
		LEFT JOIN
		user us
		ON u.user_id = us.user_id
		WHERE us.user_id = #{userId}
	</select>

	<update id="updatePermissionByRoleId">
		UPDATE role_permission SET
		permission_id= #{permissionId}
		WHERE role_id=(SELECT u.role_id FROM
		user_role u
		LEFT JOIN user us
		ON u.user_id = us.user_id
		WHERE us.user_id = #{roleId})
	</update>
</mapper>